pr_run(port=6090, host="0.0.0.0")
ls()
ls(envir = grenv)
ls(envir = graphics)
ls(graphics, envir = grenv)
ls('graphics', envir = grenv)
?ls
ab = get('graphics', envir = grenv)
ab
ls(ab)
environmentName(ab)
ls(envir = ab)
ab = get('stats', envir = grenv)
ab
ls(envir = ab)
abc = get('lm', envir = ab)
abc
ls(envir = ab)
ls(list = (), envir = ab)
ls()
ls((), envir = ab)
ls(envir = ab)
objects(envir = ab)
objects(ab, envir = ab)
objects('stats', envir = ab)
str(ab)
rm(list = ls())
gc()
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
View(grenv)
View(grenv)
View(grenv)
grenv[["stats"]]
ls(grenv[["stats"]])
is.environment(grenv[["stats"]])
ls(envir = grenv[["stats"]])
rm(list = ls())
gc()
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
View(grenv)
grenv[["splines"]]
ls(envir = grenv[["splines"]])
get('lm', envir = grenv[["stats"]])
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
View(grenv)
rm(list = ls())
gc()
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
View(grenv)
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
rm(list = ls())
gc()
ab = '?functionName=splines::bs'
pkgfunc = strsplit(sub('\\?functionName=', '', ab, '::')[[1]]
)
pkgfunc = strsplit(sub('\\?functionName=', '', ab), '::')[[1]]
pkgfunc
pkg = pkgfunc[1]; func = pkgfunc[2]
lazyLoadDB <- function(pkg){
assign(pkg, new.env(), envir = grenv) # in case if pkg not exists
for (path in .libPaths()) {
if (pkg %in% dir(path)) lazyLoad(paste(path, pkg, 'help', pkg, sep = .Platform$file.sep), envir = pkg)
}
return (paste(path, pkg, 'help', pkg, sep = .Platform$file.sep))
}
helpPath = lazyLoadDB(pkg)
grenv = new.env(parent = .GlobalEnv) # set environment for this process
helpPath = lazyLoadDB(pkg)
pkg
assign(pkg, new.env(), envir = grenv)
assign(pkg, new.env(), envir = grenv)
pkg
ls(envir = grenv)
for (path in .libPaths()) {
if (pkg %in% dir(path)) lazyLoad(paste(path, pkg, 'help', pkg, sep = .Platform$file.sep), envir = pkg)
}
lazyLoadDB <- function(pkg){
assign(pkg, new.env(parent = grenv), envir = grenv) # in case if pkg not exists
for (path in .libPaths()) {
if (pkg %in% dir(path)) lazyLoad(paste(path, pkg, 'help', pkg, sep = .Platform$file.sep), envir = grenv[[pkg]])
}
return (paste(path, pkg, 'help', pkg, sep = .Platform$file.sep))
}
lazyLoadDB(pkg)
ls(envir = grenv[[pkg]])
rm(list = ls())
gc()
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
ab = '?functionName=splines::bs'
pkgfunc = strsplit(sub('\\?functionName=', '', ab), '::')[[1]]
helpData = getFunctionHelp(pkgfunc)
jsonlite::toJSON(helpData)
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
ls()
ls(envir = 'grenv')
ls(envir = grenv)
ls(envir = grenv[[splines]])
ls(envir = grenv[['splines']])
rm(list = ls())
gc()
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
ls()
gc()
grenv = new.env(parent = .GlobalEnv) # set environment for this process
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
pkgFileNames = c('package.rds', 'hsearch.rds', 'vignette.rds')
gsub('.rds', '', pkgFileNames)
pkgInfo = vector('list', length(pkgFileNames)); names(pkgInfo) = pkgFileNames
pkgInfo
getFunctionList <- function(pkg) {
path = find.package(pkg, quiet = TRUE)
if (length(path) > 0) {
assign(pkg, new.env(parent = grenv), envir = grenv) # create a new env for loading databases
# htmlLines = readLines(paste(path, pkg, 'html', '00Index.html', sep = .Platform$file.sep))
#htmlData = lapply(htmlLines, function(x) {
#	refPat = "<a href=\"(([^:]+))?\\.html\">"
#	ifMatch = regexec(refPat, x)
#	if (ifMatch[[1]][1] == -1) x else gsub(refPat, sprintf("<a href=\"/function/%s::%s\">", pkg, regmatches(x, ifMatch)[[1]][2]), x)
# })
# read rds files in Meta
metaPath = paste(path, 'Meta', sep = .Platform$file.sep)
fs = list.files(metaPath)
# read rds : features.rds; hsearch.rds; links.rds; nsInfo.rds; package.rds; Rd.rds; vignette.rds
# features.rds: internalsID
# hsearch.rds: [[1]] functions with following fields - Package LibPath ID Name Title Topic Encoding;
## [[2]] all classes and methods [ functionList - to be displayed in frontend ]
## [[3]] keywords [[4]] concepts
# links.rds: all html links [ to be used in frontend ] for hsearch.rds.(2)
# nsInfo.rds: imports, exports, exportPatterns, importClasses, importMethods, exportClasses, exportMethods,
## exportClassPatterns, dynlibs, nativeRoutines, S3methods
# package.rds: DESCRIPTION [description - to be displayed in frontend], Built, Rdepends, Rdepends2, Depends, Suggests, Imports, LinkingTo
# Rd.rds: [ tab[Functions] to be displayed in frontend ]Rd files with following fields: File,
## Name[ to be checked with hsearch.rds[[2]] help(package = pkg, help_type = 'text') ],
## Type, Title, Encoding, Aliases, Concepts, Keywords
# vignette.rds: [ to be displayed with hyperlinks in frontend ] vignette with following fields:  File, Title, PDF, R, Depends, Keywords
pkgInfo = vector('list', length(pkgFileNames)); names(pkgInfo) = pkgFileNames
for (pkgFileName in pkgFileNames) {
if (pkgFileName %in% fs) {
if (pkgFileName == 'package.rds') pkgInfo[[pkgFileName]] = readRDS(file.path(metaPath, pkgFileName))$DESCRIPTION
if (pkgFileName == 'Rd.rds') pkgInfo[[pkgFileName]] = readRDS(file.path(metaPath, pkgFileName))[[1]]
if (pkgFileName == 'vignette.rds') pkgInfo[[pkgFileName]] = readRDS(file.path(metaPath, pkgFileName))[[1]]
}
}
return (pkgInfo)
}
return (sprintf("<html><head><body><h3 style='color:#5B8FF9;'>Warning: </h3>
<h4>The %s package is not installed yet! <br/> please use install.packages(%s) to install this package.
</h4></body></head></html>", pkg, pkg))
}
grenv = new.env(parent = .GlobalEnv)
getPkgInfo('CodeDepnds')
getFunctionList('CodeDepnds')
getFunctionList('CodeDepends')
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
getFunctionList('CodeDepends')
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
ls()
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
grenv = new.env(parent = .GlobalEnv) # set environment for this process
pkgFileNames = c('package.rds', 'Rd.rds', 'vignette.rds')
ifSuggest = FALSE # all these to be listed in env.R
source('R/getPackageGraph.R') # getPackageGraph API
source('R/getPackageInfo.R') # getFunctionGraph getFunctionList API
source('R/getFunctionInfo.R') # getFunctionInfo getFunctionHelp API
library(plumber)
pr("R/plumber.R") %>%
pr_run(port=6090, host="0.0.0.0")
